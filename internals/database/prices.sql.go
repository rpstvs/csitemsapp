// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: prices.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getLatestPrice = `-- name: GetLatestPrice :one
SELECT Price,
    Item_id
FROM Prices
WHERE Item_id = $1
ORDER BY PriceDate DESC
`

type GetLatestPriceRow struct {
	Price  float64
	ItemID uuid.UUID
}

func (q *Queries) GetLatestPrice(ctx context.Context, itemID uuid.UUID) (GetLatestPriceRow, error) {
	row := q.db.QueryRowContext(ctx, getLatestPrice, itemID)
	var i GetLatestPriceRow
	err := row.Scan(&i.Price, &i.ItemID)
	return i, err
}

const getPricebyID = `-- name: GetPricebyID :one
SELECT Price
FROM Prices
WHERE Item_id = $1
ORDER BY PriceDate DESC
`

func (q *Queries) GetPricebyID(ctx context.Context, itemID uuid.UUID) (float64, error) {
	row := q.db.QueryRowContext(ctx, getPricebyID, itemID)
	var price float64
	err := row.Scan(&price)
	return price, err
}
